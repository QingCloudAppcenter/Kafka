---
- hosts: server
  vars:
    kafka_manager_version: 2.0.0.2 #latest
    kafka_version: 1.1.1
    scala_version: "2.11"
    caddy_version: "1.0.0"

  tasks:
    - name: common setup
      include_tasks: setup-confd.yml

    - name: copy systemd files
      copy: #拷贝service文件
        src: files/{{ item }}
        dest: /{{ item }}
        directory_mode: yes
      with_items:
        - lib/systemd/system/

    - name: disable auto start
      systemd:
        name: "{{ svc_name }}"
        state: stopped
        masked: yes
      loop:
      - kafka
      - kafka-manager
      - caddy
      loop_control:
        loop_var: svc_name

    - name: add the service group
      group:
        name: kafka
        state: present

    - name: add the service user
      user:
        name: kafka
        groups: kafka
        shell: /sbin/nologin
        create_home: no
        home: "/opt/kafka/current"
        append: yes
        comment: "Service User"
        state: present

    - name: copy binaries
      copy: #拷贝service文件
        src: files/opt/
        dest: /opt
        owner: root
        group: kafka
        mode: preserve
        directory_mode: u=rwx,g=rx,o=

    - name: create symbolic link for ctl.sh
      vars:
        src_file: /opt/app/bin/ctl.sh
      file:
        src: "{{ src_file }}"
        dest: /usr/bin/appctl
        state: link

    - name: install tools
      apt:
        update_cache: yes
        name: ['openjdk-8-jdk', 'unzip']
        state: present
    
    - name: prepare service directories
      file:
        path: /opt/{{ item }}
        owner: kafka
        group: kafka
        state: directory
      with_items:
        - kafka/{{ kafka_version }}
        - kafka-manager/{{ kafka_manager_version }}
        - caddy/{{ caddy_version }}

    - name: create symbolic links
      file:
        src: /opt/{{ item.name }}/{{ item.version }}
        dest: /opt/{{ item.name }}/current
        owner: kafka
        group: kafka
        state: link
      with_items:
        - name: kafka
          version: "{{ kafka_version }}"
        - name: kafka-manager
          version: "{{ kafka_manager_version }}"
        - name: caddy
          version: "{{ caddy_version }}"

    - name: download Kafka
      get_url:
        url: https://archive.apache.org/dist/kafka/{{ kafka_version }}/kafka_{{ scala_version }}-{{ kafka_version }}.tgz
        dest: files/tmp/kafka-{{ kafka_version }}.tgz
      delegate_to: localhost

    - name: install kafka
      unarchive:
        src: files/tmp/kafka-{{ kafka_version }}.tgz
        dest: /opt/kafka/{{ kafka_version }}
        owner: kafka
        group: kafka
        creates: /opt/kafka/{{ kafka_version }}/bin/kafka-server-start.sh
        extra_opts: [ '--strip-components=1' ]

    - name: install statsd metrics
      copy:
        src: ../deps/kafka-statsd-metrics2-master-0.4.0.jar
        dest: /opt/kafka/current/libs
        owner: kafka
        group: kafka

    - name: prepare kafka manager directory
      file:
        path: files/tmp/kafka-manager-{{ kafka_manager_version }}
        state: directory
      delegate_to: localhost

    - name: download kafka manager src
      unarchive:
        src: https://github.com/yahoo/kafka-manager/archive/{{ kafka_manager_version }}.zip
        dest: files/tmp
        creates: files/tmp/kafka-manager-{{ kafka_manager_version }}/sbt
        remote_src: yes
      delegate_to: localhost

    - name: build kafka manager
      shell: ./sbt dist
      args:
        chdir: files/tmp/kafka-manager-{{ kafka_manager_version }}
        creates: files/tmp/kafka-manager-{{ kafka_manager_version }}/target/universal/kafka-manager-{{ kafka_manager_version }}.zip
        executable: /bin/bash
      delegate_to: localhost

    - name: install kafka manager binaries
      unarchive:
        src: files/tmp/kafka-manager-{{ kafka_manager_version }}/target/universal/kafka-manager-{{ kafka_manager_version }}.zip
        dest: /opt/kafka-manager
        owner: kafka
        group: kafka
        creates: /opt/kafka-manager/{{ kafka_manager_version }}/bin/kafka-manager

    - name: align kafka manager layout
      shell: |
        cp -r /opt/kafka-manager/kafka-manager-{{ kafka_manager_version }}/* /opt/kafka-manager/{{ kafka_manager_version }}/
        rm -rf /opt/kafka-manager/kafka-manager-{{ kafka_manager_version }}
      args:
        creates: /opt/kafka-manager/{{ kafka_manager_version }}/bin/kafka-manager

    - name: download caddy server
      get_url:
        url: https://github.com/mholt/caddy/releases/download/v{{ caddy_version }}/caddy_v{{ caddy_version }}_linux_amd64.tar.gz
        dest: files/tmp/caddy-{{ caddy_version }}.tgz
      delegate_to: localhost

    - name: install caddy
      unarchive:
        src: files/tmp/caddy-{{ caddy_version }}.tgz
        dest: /opt/caddy/{{ caddy_version }}
        owner: kafka
        group: kafka
        creates: /opt/caddy/{{ caddy_version }}/caddy

    - name: update permissions of service directories
      file:
        path: /opt/{{ item }}
        owner: kafka
        group: kafka
        recurse: yes
        state: directory
      with_items:
        - kafka
        - kafka-manager

    - name: add Kafka commands to system-wide $PATH
      copy:
        dest: /etc/profile.d/kafka-path.sh
        content: 'PATH=$PATH:/opt/kafka/current/bin'

    - name: set up version env
      copy:
        dest: /opt/app/bin/version.env
        content: KAFKA_VERSION={{ kafka_version }}
