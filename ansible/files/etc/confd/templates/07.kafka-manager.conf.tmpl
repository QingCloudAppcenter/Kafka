cat > /opt/kafka-manager/conf/application.conf << KAFKA_MANAGER_CONF_EOF
play.crypto.secret="^<csmm5Fx4d=r2HEX8pelM3iBkFVv?k[mc;IZE<_Qoq8EkX_/7@Zt6dP05Pzea3U"
play.crypto.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=["en"]

play.http.requestHandler = "play.http.DefaultHttpRequestHandler"
play.http.context = "/"
play.application.loader=loader.KafkaManagerLoader

# dependency
{{if exists "/links/zk_service/cluster/endpoints/client/port"}}{{$port := getv "/links/zk_service/cluster/endpoints/client/port"}}
kafka-manager.zkhosts="{{range $i, $host := ls (printf "/links/zk_service/hosts")}}{{$ip := printf "/links/zk_service/hosts/%s/ip" $host}}{{if $i}},{{end}}{{getv $ip}}:{{$port}}{{end}}"
{{else}}
kafka-manager.zkhosts="{{range $i, $host := ls (printf "/links/zk_service/hosts")}}{{$ip := printf "/links/zk_service/hosts/%s/ip" $host}}{{if $i}},{{end}}{{getv $ip}}:2181{{end}}"
{{end}}
kafka-manager.zkhosts=${?ZK_HOSTS}
pinned-dispatcher.type="PinnedDispatcher"
pinned-dispatcher.executor="thread-pool-executor"
application.features=["KMClusterManagerFeature","KMTopicManagerFeature","KMPreferredReplicaElectionFeature","KMReassignPartitionsFeature"]

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "ERROR"
}
http.port={{getv "/env/kafka-manager.port"}}
basicAuthentication.enabled={{getv "/env/kafka-manager.basicAuthentication.enabled"}}
basicAuthentication.username="{{getv "/env/kafka-manager.basicAuthentication.username"}}"
basicAuthentication.password="{{getv "/env/kafka-manager.basicAuthentication.password"}}"
basicAuthentication.realm="Kafka-Manager"

kafka-manager.consumer.properties.file=/opt/kafka-manager/conf/consumer.properties
basicAuthentication.realm="Kafka-Manager"
group.id={{getv "/host/node_id"}}
KAFKA_MANAGER_CONF_EOF