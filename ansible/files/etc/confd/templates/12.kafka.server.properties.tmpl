{{- if eq $myRole "kafka" }}

cat > /opt/app/conf/kafka/server.properties << KAFKA_SERVER_PROPERTIES_EOF
# fixed params
broker.id={{ getv "/host/sid" }}
broker.rack={{ getv "/host/zone" (getv "/cluster/zone") }}
host.name={{ getv "/host/ip" }}
log.dirs=/data/kafka/kafka-logs
log.flush.interval.messages=10000
log.flush.interval.ms=1000
log.retention.check.interval.ms=300000
log.segment.bytes=1073741824
num.network.threads=3
num.recovery.threads.per.data.dir=1
replica.fetch.max.bytes=1000000
socket.send.buffer.bytes=202400
{{- $clusterId := getv "/cluster/cluster_id" }}
{{- $zkHosts := getvs "/links/zk_service/hosts/*/ip" }}
{{- $zkPort := getv "/links/zk_service/cluster/endpoints/client/port" "2181" }}
zookeeper.connect={{ range $i, $ip := $zkHosts }}{{ if $i }},{{ end }}{{ $ip }}:{{ $zkPort }}{{ end }}/kafka/{{ $clusterId }}
zookeeper.connection.timeout.ms=6000
zookeeper.session.timeout.ms=6000

# params input by user
{{- range gets "/env/*" | filter ".+" }}
{{ base .Key }}={{ .Value }}
{{- end }}

# monitor
external.kafka.statsd.dimension.enabled.meanRate=false
external.kafka.statsd.dimension.enabled.median=false
external.kafka.statsd.dimension.enabled.p99=false
external.kafka.statsd.dimension.enabled.rate15m=fasle
external.kafka.statsd.metrics.exclude_regex=(.*kafka\.cluster\..*)|(.*kafka\.log\.Log\.partition\..*)|(.*jvm.gc\..*)|(.*jvm\.fd_usage.*)|(.*jvm.daemon_threads\..*)|(.*jvm\.memory\.pool\..*)|(.*request\.ConsumerMetadata\..*)|(.*request\.ControlledShutdown\..*)|(.*request\.Heartbeat\..*)|(.*request\.JoinGroup\..*)|(.*request\.LeaderAndIsr\..*)|(.*request\.Metadata\..*)|(.*request\.OffsetFetch\..*)|(.*request\.Offsets\..*)|(.*request\.StopReplica\..*)|(.*request\.UpdateMetadata\..*)|(.*request\.OffsetCommit\..*)|(.*consumer\.FetchRequestAndResponseMetrics\..*)|(.*network\.RequestChannel\..*)|(.*OffsetManager\..*)|(.*FetcherStats\..*)|(.*BrokerTopicMetrics\.topic\..*)|(.*FetcherLagMetrics\.clientId\..*)|(.*DelayedFetchRequestMetrics\..*)|(.*networkProcessor\..*)|(.*FailedFetchRequestsPerSec.*)|(.*FailedProduceRequestsPerSec.*)|(.*KafkaController\.PreferredReplicaImbalanceCount.*)|(.*BytesRejectedPerSec.*)|(.*DelayedProducerRequestMetrics\..*)|(.*MinFetchRate.*)|(.*ExpiresPerSecond\..*)|(.*NumDelayedRequests.*)|(.*ControllerStats.*)|(.*FetchRequestPurgatory.*)|(.*KafkaRequestHandlerPool.*)|(.*ProducerRequestPurgatory.*)|(.*RequestQueueTimeMs.*)|(.*LocalTimeMs.*)|(.*RemoteTimeMs.*)|(.*ResponseSendTimeMs.*)|(.*NetworkProcessorAvgIdlePercent.*)|(.*kafka\.log\..*)|(.*kafka\.utils\..*)|(.*RequestMetrics\..*)|(.*kafka\.coordinator\..*)|(.*TotalFetchRequestsPerSec.*)|(.*TotalProduceRequestsPerSec.*)|(.*DelayedOperationPurgatory\..*)|(.*yammer-metrics-count)|(.*SessionExpireListener\..*)|(.*DelayedFetchMetrics\.*)
external.kafka.statsd.metrics.prefix=
external.kafka.statsd.port=8125
external.kafka.statsd.reporter.enabled=true
kafka.metrics.reporters=com.airbnb.kafka.KafkaStatsdMetricsReporter
queued.max.requests=500
KAFKA_SERVER_PROPERTIES_EOF

{{- end }}
