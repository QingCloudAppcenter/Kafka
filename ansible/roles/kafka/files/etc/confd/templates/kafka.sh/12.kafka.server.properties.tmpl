{{- if eq $myRole "kafka" }}

flush > /opt/app/conf/kafka/server.properties << KAFKA_SERVER_PROPERTIES_EOF
# fixed params
broker.id={{ getv "/host/sid" }}
broker.rack={{ getv "/host/zone" (getv "/cluster/zone") }}
host.name={{ $myIp }}
log.dirs=/data/kafka/kafka-logs
log.flush.interval.messages=10000
log.flush.interval.ms=1000
log.retention.check.interval.ms=300000
port=9092
replica.fetch.max.bytes=1000000
{{- $clusterId := getv "/cluster/cluster_id" }}
{{- $zkHosts := getvs "/links/zk_service/hosts/*/ip" }}
zookeeper.connect={{ range $i, $ip := $zkHosts }}{{ if $i }},{{ end }}{{ $ip }}:{{ $zkPort }}{{ end }}/kafka/{{ $clusterId }}
zookeeper.connection.timeout.ms=6000
zookeeper.session.timeout.ms=6000

{{- $SASLType := getv "/env/sasl_type" }}
{{- if eq $SASLType "SSL" }}

{{- if eq $myEip "" }}
listeners=SSL://{{ $myIp }}:9092
{{- else }}
listeners=SSL://{{ $myIp }}:9092
advertised.listeners=SSL://{{ $myEip }}:9092
{{- end }}

ssl.endpoint.identification.algorithm=
ssl.keystore.location=/ssl/kafka.server.keystore.jks
ssl.keystore.password={{ getv "/env/sasl_password"}}
ssl.key.password={{ getv "/env/sasl_password"}}
ssl.truststore.location=/ssl/kafka.server.truststore.jks
ssl.truststore.password={{ getv "/env/sasl_password"}}
ssl.client.auth=required
security.inter.broker.protocol=SSL
ssl.enabled.protocols=TLSv1.2,TLSv1.1,TLSv1
ssl.protocol=SSL
{{- else if eq $SASLType "SCRAM-SHA-512" }}

security.inter.broker.protocol=SASL_PLAINTEXT
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-512
sasl.enabled.mechanisms=SCRAM-SHA-512
{{- if eq $myEip "" }}
listeners=SASL_PLAINTEXT://{{ $myIp }}:9092
{{- else }}
listeners=SASL_PLAINTEXT://{{ $myIp }}:9092
advertised.listeners=SASL_PLAINTEXT://{{ $myEip }}:9092
{{- end }}
{{- else if eq $SASLType "SCRAM-SHA-256" }}

security.inter.broker.protocol=SASL_PLAINTEXT
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-256
sasl.enabled.mechanisms=SCRAM-SHA-256
{{- if eq $myEip "" }}
listeners=SASL_PLAINTEXT://{{ $myIp }}:9092
{{- else }}
listeners=SASL_PLAINTEXT://{{ $myIp }}:9092
advertised.listeners=SASL_PLAINTEXT://{{ $myEip }}:9092
{{- end }}
{{- else if eq $SASLType "SASL-PLAINTEXT"}}

security.inter.broker.protocol=SASL_PLAINTEXT
sasl.mechanism.inter.broker.protocol=PLAIN
sasl.enabled.mechanisms=PLAIN
{{- if eq $myEip "" }}
listeners=SASL_PLAINTEXT://{{ $myIp }}:9092
{{- else }}
listeners=SASL_PLAINTEXT://{{ $myIp }}:9092
advertised.listeners=SASL_PLAINTEXT://{{ $myEip }}:9092
{{- end }}
{{- else }}

{{- if eq $myEip "" }}
listeners=PLAINTEXT://{{ $myIp }}:9092
{{- else }}
listeners=PLAINTEXT://{{ $myIp }}:9092
advertised.listeners=PLAINTEXT://{{ $myEip }}:9092
{{- end }}

{{- end }}



# params input by user
{{- range gets "/env/*" | filter ".+" }}
{{- $key := base .Key }}
{{- if not (eq (index (split $key ".") 0) "kafka-manager")}}
{{- if not (eq (index (split $key "_") 0) "ca") }}
{{- if eq (index (split $key "_") 0) "advertised"}}
{{- if not (eq (index (split $key "_") 0) "sasl")}}
{{replace $key "_" "." -1}}={{ .Value }}
{{- end }}
{{- else }}
{{ $key }}={{ .Value }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
socket.request.max.bytes=419430400

# monitor
external.kafka.statsd.dimension.enabled.meanRate=false
external.kafka.statsd.dimension.enabled.median=false
external.kafka.statsd.dimension.enabled.p99=false
external.kafka.statsd.dimension.enabled.rate15m=fasle
external.kafka.statsd.metrics.exclude_regex=(.*kafka\.cluster\..*)|(.*kafka\.log\.Log\.partition\..*)|(.*jvm.gc\..*)|(.*jvm\.fd_usage.*)|(.*jvm.daemon_threads\..*)|(.*jvm\.memory\.pool\..*)|(.*request\.ConsumerMetadata\..*)|(.*request\.ControlledShutdown\..*)|(.*request\.Heartbeat\..*)|(.*request\.JoinGroup\..*)|(.*request\.LeaderAndIsr\..*)|(.*request\.Metadata\..*)|(.*request\.OffsetFetch\..*)|(.*request\.Offsets\..*)|(.*request\.StopReplica\..*)|(.*request\.UpdateMetadata\..*)|(.*request\.OffsetCommit\..*)|(.*consumer\.FetchRequestAndResponseMetrics\..*)|(.*network\.RequestChannel\..*)|(.*OffsetManager\..*)|(.*FetcherStats\..*)|(.*BrokerTopicMetrics\.topic\..*)|(.*FetcherLagMetrics\.clientId\..*)|(.*DelayedFetchRequestMetrics\..*)|(.*networkProcessor\..*)|(.*FailedFetchRequestsPerSec.*)|(.*FailedProduceRequestsPerSec.*)|(.*KafkaController\.PreferredReplicaImbalanceCount.*)|(.*BytesRejectedPerSec.*)|(.*DelayedProducerRequestMetrics\..*)|(.*MinFetchRate.*)|(.*ExpiresPerSecond\..*)|(.*NumDelayedRequests.*)|(.*ControllerStats.*)|(.*FetchRequestPurgatory.*)|(.*KafkaRequestHandlerPool.*)|(.*ProducerRequestPurgatory.*)|(.*RequestQueueTimeMs.*)|(.*LocalTimeMs.*)|(.*RemoteTimeMs.*)|(.*ResponseSendTimeMs.*)|(.*NetworkProcessorAvgIdlePercent.*)|(.*kafka\.log\..*)|(.*kafka\.utils\..*)|(.*RequestMetrics\..*)|(.*kafka\.coordinator\..*)|(.*TotalFetchRequestsPerSec.*)|(.*TotalProduceRequestsPerSec.*)|(.*DelayedOperationPurgatory\..*)|(.*yammer-metrics-count)|(.*SessionExpireListener\..*)|(.*DelayedFetchMetrics\.*)
external.kafka.statsd.metrics.prefix=
external.kafka.statsd.port=8125
external.kafka.statsd.reporter.enabled=true
kafka.metrics.reporters=com.airbnb.kafka.KafkaStatsdMetricsReporter
KAFKA_SERVER_PROPERTIES_EOF

{{- end }}

{{- $clusterId := getv "/cluster/cluster_id" }}
{{- $zkHosts := getvs "/links/zk_service/hosts/*/ip" }}
{{- $SASLType := getv "/env/sasl_type" }}
{{- if eq $SASLType "SCRAM-SHA-512" }}

/opt/kafka/current/bin/kafka-configs.sh --zookeeper {{ range $i, $ip := $zkHosts }}{{ if $i }},{{ end }}{{ $ip }}:{{ $zkPort }}{{ end }}/kafka/{{ $clusterId }} --alter --add-config 'SCRAM-SHA-512=[password={{ getv "/env/sasl_password"}}]' --entity-type users --entity-name {{ getv "/env/sasl_username"}}
{{- else if eq $SASLType "SCRAM-SHA-256" }}

/opt/kafka/current/bin/kafka-configs.sh --zookeeper {{ range $i, $ip := $zkHosts }}{{ if $i }},{{ end }}{{ $ip }}:{{ $zkPort }}{{ end }}/kafka/{{ $clusterId }} --alter --add-config 'SCRAM-SHA-256=[password={{ getv "/env/sasl_password"}}]' --entity-type users --entity-name {{ getv "/env/sasl_username"}}
{{- end }}
