{{- $roleMap := map "kafka" "kafka" "client" "kafka-manager" }}
{{- $myRole := index $roleMap (getv "/host/role") }}

allNodes="$(sort -V << ALL_NODES_EOF
{{- range $nodeRole := lsdir "/hosts" }}
{{- $joiningNodes := lsdir (printf "/adding-hosts/%s" $nodeRole) }}
{{- $leavingNodes := lsdir (printf "/deleting-hosts/%s" $nodeRole) }}
{{- range $instanceId := lsdir (printf "/hosts/%s" $nodeRole) }}
{{- if $joiningNodes | filter $instanceId }}
joining/
{{- else if $leavingNodes | filter $instanceId }}
leaving/
{{- else }}
stable/
{{- end }}
{{- $nodeRole }}/
{{- $nodeSid := getv (printf "/hosts/%s/%s/sid" $nodeRole $instanceId) }}
{{- $nodeSid }}/
{{- $instanceId }}/
{{- getv (printf "/hosts/%s/%s/node_id" $nodeRole $instanceId) }}/
{{- getv (printf "/hosts/%s/%s/ip" $nodeRole $instanceId) }}/
{{- $nodeEip := getv (printf "/hosts/%s/%s/eip" $nodeRole $instanceId) }}
{{- if $nodeEip }}{{ $nodeEip }}{{ else }}noEip{{- end }}
{{- end }}
{{- end }}
ALL_NODES_EOF
)"

flush /opt/app/current/bin/envs/node.env << NODE_ENV_EOF

MY_IP={{ getv "/host/ip" }}
MY_EIP={{ getv "/host/eip" }}
MY_ROLE={{ $myRole }}
MY_INSTANCE_ID={{ getv "/host/instance_id" }}
CLUSTER_ID={{ getv "/cluster/cluster_id" }}
MY_PORT="{{ if eq $myRole "kafka" }}9092{{ else }}{{ getv "/env/kafka-manager.port" "9000" }}{{ end }}"
{{- if eq $myRole "kafka-manager" }}
WEB_USER="{{ getv "/env/kafka-manager.basicAuthentication.username" }}"
WEB_PASSWORD="{{ getv "/env/kafka-manager.basicAuthentication.password" }}"
{{- end }}
{{- $clusterId := getv "/cluster/cluster_id" }}
{{- $zkHosts := getvs "/links/zk_service/hosts/*/ip" }}
{{- $zkPort := getv "/links/zk_service/cluster/endpoints/client/port" "2181" }}
ZK_HOSTS={{ range $i, $ip := $zkHosts }}{{ if $i }},{{ end }}{{ $ip }}:{{ $zkPort }}{{ end }}/kafka/{{ $clusterId }}

STABLE_NODES="$(echo "$allNodes" | grep stable | xargs)"
KAFKA_NODES="$(echo "$allNodes" | grep kafka | xargs)"
JOINING_NODES="$(echo "$allNodes" | grep ^joining | xargs)"
LEAVING_NODES="$(echo "$allNodes" | grep ^leaving | xargs)"

NODE_ENV_EOF
