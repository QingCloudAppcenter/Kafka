---
- name: setvariables
  set_fact:
    kafka_manager_version: "2.0.0.2"
    scala_version: "2.11"

- name: install confd files
  include_role:
    name: confd-files-1.0.9

- name: copy binaries
  copy:
    src: "{{ role_path }}/files/opt/app/"
    dest: /opt/app/
    owner: root
    group: svc
    mode: preserve
    directory_mode: u=rwx,g=rx,o=

- name: prepare service directories
  file:
    path: /opt/{{ item }}
    owner: kafka
    group: svc
    state: directory
  with_items:
    - kafka-manager

- name: install manager 
  include_role:
    name: install-1.0.5
  vars:
    opts:
      pkg_name: "{{ item  }}"
      pkg_version: "{{ kafka_manager_version }}"
      pkg_type: zip
      pkg_url: "https://github.com/yahoo/CMAK/archive/{{ kafka_manager_version }}.zip"
      extracts: yes
      dest_path: "~/.ansible/cache/{{ item  }}/"
      creates: "~/.ansible/cache/{{ item  }}/{{ item  }}-{{ kafka_manager_version }}/sbt"
      bin_path:
  with_items: 
    - kafka-manager

- name: build kafka manager
  shell: ./sbt dist
  args:
    chdir: "~/.ansible/cache/kafka-manager/kafka-manager-{{ kafka_manager_version }}/"
    creates: ~/.ansible/cache/kafka-manager/kafka-manager-{{ kafka_manager_version }}/target/universal/kafka-manager-{{ kafka_manager_version }}.zip
    executable: /bin/bash
  delegate_to: localhost

- name: copy bulit manager
  copy:
    src: ~/.ansible/cache/kafka-manager/kafka-manager-{{ kafka_manager_version }}/target/universal/kafka-manager-{{ kafka_manager_version }}.zip
    dest: /tmp/kafka-manager-{{ kafka_manager_version }}.zip
    owner: kafka
    group: svc
    mode: preserve
    directory_mode: u=rwx,g=rx,o=

- name: install kafka manager binaries
  unarchive:
    src: /tmp/kafka-manager-{{ kafka_manager_version }}.zip
    dest: "/opt/kafka-manager"
    owner: kafka
    group: svc
    remote_src: yes

- name: prepare service directories
  shell: mv  /opt/kafka-manager/kafka-manager-{{ kafka_manager_version }} /opt/kafka-manager/{{ kafka_manager_version }}

- name: create symbolic links
  file:
    src: /opt/{{ item.name }}/{{ item.version }}
    dest: /opt/{{ item.name }}/current
    owner: kafka
    group: svc
    state: link
  with_items:
    - name: kafka-manager
      version: "{{ kafka_manager_version }}"

- name: update permissions of service directories
  file:
    path: /opt/{{ item }}
    owner: kafka
    group: svc
    recurse: yes
    state: directory
  with_items:
    - kafka-manager

