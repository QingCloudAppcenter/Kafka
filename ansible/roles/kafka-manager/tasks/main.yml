---
- name: setvariables
  set_fact:
    kafka_manager_version: "2.0.0.2"
    scala_version: "2.11"

- name: install confd files
  include_role:
    name: confd-files-1.0.2

- name: copy systemd files
  copy: #拷贝service文件
    src: files/{{ item }}
    dest: /{{ item }}
    directory_mode: yes
  with_items:
    - lib/systemd/system/

- name: disable auto start
  systemd:
    name: "{{ svc_name }}"
    state: stopped
    masked: yes
  loop:
  - kafka-manager
  loop_control:
    loop_var: svc_name

- name: copy binaries
  copy: #拷贝service文件
    src: files/opt/
    dest: /opt
    owner: root
    group: kafka
    mode: preserve
    directory_mode: u=rwx,g=rx,o=

- name: prepare service directories
  file:
    path: /opt/{{ item }}
    owner: kafka
    group: kafka
    state: directory
  with_items:
    - kafka-manager/{{ kafka_manager_version }}

- name: create symbolic links
  file:
    src: /opt/{{ item.name }}/{{ item.version }}
    dest: /opt/{{ item.name }}/current
    owner: kafka
    group: kafka
    state: link
  with_items:
    - name: kafka-manager
      version: "{{ kafka_manager_version }}"


- name: install manager 
  include_role:
    name: install-1.0.5
  vars:
    opts:
      pkg_name: CMAK  
      pkg_version: "{{ kafka_manager_version }}"
      pkg_type: zip
      pkg_url: "https://github.com/yahoo/CMAK/archive/{{ kafka_manager_version }}.zip"
      extracts: false
      dest_path: "~/.ansible/cache/CMAK/"
      creates: "~/.ansible/cache/CMAK/CMAK-{{ kafka_manager_version }}/sbt"
      bin_path:

- name: build kafka manager
  shell: ./sbt dist
  args:
    chdir: "~/.ansible/cache/CMAK/CMAK-{{ kafka_manager_version }}/"
    creates: ~/.ansible/cache/CMAK/CMAK-{{ kafka_manager_version }}/target/universal/kafka-manager-{{ kafka_manager_version }}.zip
    executable: /bin/bash
  delegate_to: localhost

- name: copy bulit manager
  copy:
    src: ~/.ansible/cache/CMAK/CMAK-{{ kafka_manager_version }}/target/universal/kafka-manager-{{ kafka_manager_version }}.zip
    dest: /tmp/kafka-manager-{{ kafka_manager_version }}.zip
    owner: root
    group: root
    mode: preserve
    directory_mode: u=rwx,g=rx,o=

- name: install kafka manager binaries
  unarchive:
    src: /tmp/kafka-manager-{{ kafka_manager_version }}.zip
    dest: /opt/kafka-manager/{{ kafka_manager_version }}
    owner: kafka
    group: kafka
    creates: /opt/kafka-manager/{{ kafka_manager_version }}/bin/kafka-manager
    remote_src: yes

- name: update permissions of service directories
  file:
    path: /opt/{{ item }}
    owner: kafka
    group: kafka
    recurse: yes
    state: directory
  with_items:
    - kafka-manager

