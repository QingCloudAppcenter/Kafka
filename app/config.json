{
    "type": "array",
    "properties": [{
        "key": "cluster",
        "description": "Kafka release cluster properties",
        "type": "array",
        "properties": [{
            "key": "name",
            "label": "Name",
            "description": "The name of the Kafka service",
            "type": "string",
            "default": "Kafka",
            "required": "no"
        }, {
            "key": "description",
            "label": "Description",
            "description": "The description of the Kafka service",
            "type": "string",
            "default": "",
            "required": "no"
        }, {
            "key": "vxnet",
            "label": "VxNet",
            "description": "Choose a vxnet to join",
            "type": "string",
            "default": "",
            "required": "yes"
        }, {
            "key": "zk_service",
            "label": "ZooKeeper",
            "description": "Choose a ZooKeeper to use",
            "type": "service",
            "tag": ["ZK", "ZooKeeper"],
            "limits": {
                "app-tg3lbp0a": []
            },
            "default": "",
            "required": "yes"
        }, {
            "key": "kafka",
            "label": "Kafka nodes",
            "description": "Kafka nodes",
            "type": "array",
            "properties": [{
                "key": "cpu",
                "label": "CPU",
                "description": "CPUs of each node",
                "type": "integer",
                "default": 1,
                "range": [1, 2, 4, 8, 12, 16],
                "required": "yes"
            }, {
                "key": "memory",
                "label": "Memory",
                "description": "Memory of each node",
                "type": "integer",
                "default": 2048,
                "range": [1024, 2048, 4096, 8192, 16384, 32768,49152,65536],
                "required": "yes"
            }, {
                "key": "count",
                "label": "Node Count",
                "description": "Number of nodes for the cluster to create",
                "type": "integer",
                "default": 3,
                "auto_scale_step": 1,
                 "min":1,
                 "max":200,
                "required": "yes"
            }, {
                "key": "instance_class",
                "label": "Node Class",
                "description": "The instance type for the cluster to run, such as high performance, high performance plus",
                "type": "integer",
                "default": 0,
                "range": [0, 1],
                "required": "yes"
            }, {
                "key": "volume_size",
                "label": "Volume Size",
                "description": "The volume size for each instance",
                "type": "integer",
                 "auto_scale_step": 10,
                "default": 30,
                "required": "yes"
            }]
    }, {
        "key": "client",
        "label": "client node",
        "description": "client node",
        "type": "array",
        "properties": [{
            "key": "cpu",
            "label": "CPU",
            "description": "CPUs of each node",
            "type": "integer",
            "default": 1,
            "range": [1, 2, 4, 8, 12, 16],
            "required": "yes"
        }, {
            "key": "memory",
            "label": "Memory",
            "description": "Memory of each node",
            "type": "integer",
            "default": 1024,
            "range": [1024, 2048, 4096, 8192, 16384, 32768,49152,65536],
            "required": "yes"
        }, {
            "key": "count",
            "label": "Node Count",
            "description": "Number of nodes for the cluster to create",
            "type": "integer",
            "default": 1,
             "min":0,
             "max":20,
            "required": "yes"
        }, {
            "key": "instance_class",
            "label": "Node Class",
            "description": "The instance type for the cluster to run, such as high performance, high performance plus",
            "type": "integer",
            "default": 0,
            "range": [0, 1],
            "required": "yes"
        }, {
            "key": "volume_size",
            "label": "Volume Size",
            "description": "The volume size for each instance",
            "type": "integer",
            "default": 10,
            "required": "yes"
        }]
    }]
},{
        "key": "env",
        "description": "Kafka service properties",
        "type": "array",
        "properties": [{
            "key": "log.retention.bytes",
            "label": "log.retention.bytes",
            "description": "The maximum size of the log before deleting it",
            "type": "integer",
            "default": -1,
            "max": 1073741824000,
            "min": -1,
            "required": "no"
        }, {
            "key": "log.retention.hours",
            "label": "log.retention.hours",
            "description": "The number of hours to keep a log file before deleting it (in hours)",
            "type": "integer",
            "default": 168,
            "max": 8760,
            "min": 1,
            "required": "no"
        }, {
            "key": "log.segment.bytes",
            "label": "log.segment.bytes",
            "description": "The maximum size of the segment of log",
            "type": "integer",
            "default": 1073741824,
            "max": 10737418240,
            "min": 1048576,
            "required": "no"
        }, {
            "key": "log.segment.delete.delay.ms",
            "label": "log.segment.delete.delay.ms",
            "description": "The time of delay to delete segment log",
            "type": "integer",
            "default": 60000,
            "min": 0,
            "required": "no"
        }, {
            "key": "log.roll.hours",
            "label": "log.roll.hours",
            "description": "The number of hours to keep a log file before roll it to segment",
            "type": "integer",
            "default": 168,
            "max": 876,
            "min": 1,
            "required": "no"
        }, {
            "key": "auto.create.topics.enable",
            "label": "auto.create.topics.enable",
            "description": "Enable auto creation of topic on the server",
            "type": "boolean",
            "default": true,
            "range": [true, false],
            "required": "no"
        }, {
            "key": "default.replication.factor",
            "label": "default.replication.factor",
            "description": "default replication factors for automatically created topics",
            "type": "integer",
            "default": 1,
            "max": 10,
            "min": 1,
            "required": "no"
        }, {
            "key": "delete.topic.enable",
            "label": "delete.topic.enable",
            "description": "Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off",
            "type": "boolean",
            "default": true,
            "range": [true, false],
            "required": "no"
        }, {
            "key": "offsets.topic.replication.factor",
            "label": "offsets.topic.replication.factor",
            "description": "The replication factor for the offsets topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement",
            "type": "integer",
            "default": 3,
            "max": 100,
            "min": 1,
            "required": "yes"
        }, {
            "key": "log.cleanup.policy",
            "label": "log.cleanup.policy",
            "description": "This string designates the retention policy to use on old log segments",
            "type": "string",
            "default": "delete",
            "range": ["delete", "compact"],
            "required": "no"
        }, {
            "key": "log.cleaner.enable",
            "label": "log.cleaner.enable",
            "description":"use to compact messages",
            "type": "boolean",
            "default": true,
            "range": [true, false],
            "required": "no"
        },{
            "key": "compression.type",
            "label": "compression.type",
            "description": "Specify the final compression type for a given topic",
            "type": "string",
            "default": "producer",
            "range": ["producer", "gzip","snappy","lz4","uncompressed"],
            "required": "no"
        }, {
            "key": "message.max.bytes",
            "label": "message.max.bytes",
            "description": "This is largest message size Kafka will allow to be appended to this topic",
            "type": "integer",
            "max": 1073741823,
            "min": 1024,
            "default": 1000000,
            "required": "no"
        }, {
            "key": "num.network.threads",
            "label": "num.network.threads",
            "description": "The number of threads that the server uses for receiving requests from the network and sending responses to the network",
            "type": "integer",
            "default": 3,
            "min": 1,
            "required": "no"
        }, {
            "key": "num.io.threads",
            "label": "num.io.threads",
            "description": "The number of io threads that the server uses for carrying out network requests",
            "type": "integer",
            "default": 8,
            "max": 20,
            "min": 1,
            "required": "no"
        }, {
            "key": "num.partitions",
            "label": "num.partitions",
            "description": "The default number of log partitions per topic",
            "type": "integer",
            "default": 3,
            "max": 100,
            "min": 1,
            "required": "no"
        }, {
            "key": "num.recovery.threads.per.data.dir",
            "label": "num.recovery.threads.per.data.dir",
            "description": "The number of threads per data directory to be used for log recovery at startup and flushing at shutdown",
            "type": "integer",
            "default": 1,
            "min": 1,
            "required": "no"
        }, {
            "key": "num.replica.fetchers",
            "label": "num.replica.fetchers",
            "description": "Number of fetcher threads used to replicate messages from a source broker",
            "type": "integer",
            "default": 1,
            "max": 10,
            "min": 1,
            "required": "no"
        }, {
            "key": "queued.max.requests",
            "label": "queued.max.requests",
            "description": "The number of queued requests allowed before blocking the network threads",
            "type": "integer",
            "default": 500,
            "max": 5000,
            "min": 1,
            "required": "no"
        }, {
            "key": "socket.receive.buffer.bytes",
            "label": "socket.receive.buffer.bytes",
            "description": "The SO.RCVBUF buffer of the socket sever sockets",
            "type": "integer",
            "default": 102400,
            "max": 102400000,
            "min": 1024,
            "required": "no"
        }, {
            "key": "socket.send.buffer.bytes",
            "label": "socket.send.buffer.bytes",
            "description": "The SO.SNDBUF buffer of the socket sever sockets",
            "type": "integer",
            "default": 102400,
            "max": 102400000,
            "min": 1024,
            "required": "no"
        }, {
            "key": "unclean.leader.election.enable",
            "label": "unclean.leader.election.enable",
            "description": "Indicates whether to enable replicas not in the ISR set to be elected as leader as a last resort, even though doing so may result in data loss",
            "type": "boolean",
            "default": true,
            "range": [true, false],
            "required": "no"
        }, {
            "key": "advertised.host.name",
            "label": "advertised.host.name",
            "description": "This is the hostname that will be given out to other workers to connect to",
            "type": "string",
            "default": "",
            "required": "no"
        }, {
            "key": "advertised.port",
            "label": "advertised.port",
            "description": "This is the port that will be given out to other workers to connect to",
            "type": "integer",
            "default": 9092,
            "required": "no"
        }, {
            "key": "kafka-manager.basicAuthentication.enabled",
            "label": "kafka-manager.basicAuthentication.enabled",
            "description": "Choose whether or not need to log in kafka-manager",
            "type": "boolean",
            "default": false,
            "range": [true, false],
            "required": "yes"
        }, {
            "key": "kafka-manager.basicAuthentication.username",
            "label": "kafka-manager.basicAuthentication.username",
            "description": "This is the username that log in kafka-manager",
            "type": "string",
            "default": "admin",
            "required": "yes"
        }, {
            "key": "kafka-manager.basicAuthentication.password",
            "label": "kafka-manager.basicAuthentication.password",
            "description": "This is the password that log in kafka-manager",
            "type": "password",
            "changeable":true,
            "default": "password",
            "required": "yes"
        }, {
            "key": "kafka-manager.port",
            "label": "kafka-manager.port",
            "description": "This is the kafka-manager http port",
            "type": "integer",
            "changeable":true,
            "default": 9000,
            "required": "no"
        }, {
            "key": "zabbix.agent.enable",
            "label": "zabbix.agent.enable",
            "description": "This is the config that enable zabbix agent",
            "type": "boolean",
            "default": false,
            "range": [true, false],
            "required": "yes"
        }, {
            "key": "zabbix.server.ip",
            "label": "zabbix.server.ip",
            "description": "This is the zabbix-server which host will connect",
            "type": "string",
            "changeable":true,
            "default": "127.0.0.1",
            "required": "no"
        }, {
            "key": "zabbix.agent.port",
            "label": "zabbix.agent.port",
            "description": "This is the zabbix.port which host will connect",
            "default": 10050,
            "type": "integer",
            "min": 9000,
            "max": 65534,
            "required": "no"
        }, {
            "key": "replica.lag.time.max.ms",
            "label": "replica.lag.time.max.ms",
            "description": "The time interval at which leaders will remove followers from isr",
            "default": 10000,
            "type": "integer",
            "min": 6000,
            "max": 99999,
            "required": "no"
        }, {
            "key": "group.max.session.timeout.ms",
            "label": "group.max.session.timeout.ms",
            "description": "The maximum allowed session timeout for registered consumers",
            "default": 1800000,
            "type": "integer",
            "min": 0,
            "max": 9999999,
            "required": "no"
        }, {
            "key": "group.min.session.timeout.ms",
            "label": "group.min.session.timeout.ms",
            "description": "The minimum allowed session timeout for registered consumers",
            "default": 6000,
            "type": "integer",
            "min": 0,
            "max": 60000,
            "required": "no"
        }]
    }]
}
